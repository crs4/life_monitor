apiVersion: v1
kind: ConfigMap
metadata:
    name: lifemonitor-nginx-configmap
    labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        helm.sh/chart: {{ include "chart.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
    server-block.conf: |-
        # set upstream server
        upstream lm_app {
            # fail_timeout=0 means we always retry an upstream even if it failed
            # to return a good HTTP response
            server {{ include "chart.fullname" . }}-backend:8000 fail_timeout=0;
        }

        {{- if .Values.rateLimiting.zone.accounts.enabled }}
        # Define Rate Limiting Zones
        limit_req_zone $binary_remote_addr zone=api_accounts:{{ .Values.rateLimiting.zone.accounts.size }} rate={{ .Values.rateLimiting.zone.accounts.rate }};
        {{- end }}

        server {
            listen 0.0.0.0:8080 default_server;
            client_max_body_size 4G;
            # set the correct host(s) for your site
            server_name localhost;
            keepalive_timeout 60;

            #ssl_certificate /nginx/certs/lm.crt;
            #ssl_certificate_key /nginx/certs/lm.key;

            # force HTTP traffic to HTTPS
            error_page  497 https://$http_host$request_uri;

            # define error pages
            error_page 404 /error/404;
            error_page 429 /error/429;
            error_page 500 /error/500;
            error_page 502 /error/502;

            # location for error pages
            location ~ ^/error {
                # disable redirects
                proxy_redirect          off;

                # rewrite headers
                proxy_pass_header       Server;
                proxy_set_header        X-Real-IP $http_x_forwarded_for;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host $http_host;
                proxy_set_header        Cookie $http_cookie;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;

                # set uppstream
                proxy_pass              https://lm_app;
            }

            # set static files location
            location /static/ {
                root /app/lifemonitor;
            }
            
            # if the path matches to root, redirect to the account page
            location = / {
                return 301 https://{{ .Values.externalServerName }}/account/;
            }

            location ~ ^/account {
                # disable redirects
                proxy_redirect          off;

                # rewrite headers
                proxy_pass_header       Server;
                proxy_set_header        X-Real-IP $http_x_forwarded_for;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Scheme $scheme;
                proxy_set_header        Host $http_host;
                proxy_set_header        Cookie $http_cookie;

                # various proxy settings
                proxy_connect_timeout   600;
                proxy_read_timeout      600;
                proxy_send_timeout      600;
                #proxy_intercept_errors  on;

                # set uppstream
                proxy_pass              https://lm_app;

                {{ include "lifemonitor.api.rateLimiting" . | indent 12 }}
            }

            # set proxy location
            location / {
                #resolver 127.0.0.11 ipv6=off valid=30s;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                # we don't want nginx trying to do something clever with
                # redirects, we set the Host: header above already.
                proxy_redirect off;
                proxy_pass https://lm_app;
            }
        }
