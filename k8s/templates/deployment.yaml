apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-backend
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.lifemonitor.autoscaling.enabled }}
  replicas: {{ .Values.lifemonitor.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.lifemonitor.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.lifemonitor.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.lifemonitor.podSecurityContext | nindent 8 }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.lifemonitor.securityContext | nindent 12 }}
          image: "{{ .Values.lifemonitor.image.repository }}:{{ .Values.lifemonitor.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.lifemonitor.image.pullPolicy }}
          env:
            - name: FLASK_ENV
              value: "production"
            - name: POSTGRESQL_HOST
              value: {{ include "chart.fullname" . }}-postgresql
            - name: POSTGRESQL_PORT
              value: "{{ .Values.postgresql.service.port }}"
            - name: POSTGRESQL_USERNAME
              value: "{{ .Values.postgresql.postgresqlUsername }}"
            - name: POSTGRESQL_PASSWORD
              value: "{{ .Values.postgresql.postgresqlPassword }}"
            - name: POSTGRESQL_DATABASE
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: TLS_KEY
              value: "/lm/certs/tls.key"
            - name: TLS_CERT
              value: "/lm/certs/tls.crt"
            - name: DEBUG
              value: "True"
          volumeMounts:
            - mountPath: "/lm/certs/"
              name: lifemonitor-tls
              readOnly: true
            - name: lifemonitor-settings
              mountPath: "/lm/settings.conf"
              subPath: settings.conf
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.lifemonitor.resources | nindent 12 }}
      volumes:
        - name: lifemonitor-tls
          secret:
            secretName: lifemonitor-tls
        - name: lifemonitor-settings
          secret:
            secretName: lifemonitor-settings
      {{- with .Values.lifemonitor.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.lifemonitor.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.lifemonitor.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
