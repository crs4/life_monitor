version: "3.5"

services:

  nginx:
    image: bitnami/nginx:1.19-debian-10
    depends_on:
      - "lm"
    ports:
      - "8443:8443"
    restart: "always"
    networks:
      - life_monitor
    volumes:
      - "./certs:/nginx/certs"
      - "./docker/nginx.conf:/opt/bitnami/nginx/conf/server_blocks/lm.conf"

  db:
    # Docker image docs: https://github.com/bitnami/bitnami-docker-postgresql
    # We use PgSQL 11 instead of 12 since that's the newest version of the client
    # available in the Python image we're using for the application
    image: bitnami/postgresql:11
    ports:
      - "32768:5432"
    env_file: &env_file
      - settings.conf
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
    restart: "always"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: "15s"
      retries: 5
    networks:
      - life_monitor
    volumes:
      - 'lifemonitor_db:/bitnami/postgresql'

  lm:
    # Remember that this service is using its default configuration
    # to access the database, so the settings must match the environment
    # configuration set for db above.
    image: crs4/lifemonitor
    depends_on:
      - "db"
    #DEV ports:
    #DEV  - "8000:8000"
    #DEV user: "USER_UID:USER_GID"
    env_file: *env_file
    environment:
      - "POSTGRESQL_HOST=db"
      - "POSTGRESQL_PORT=5432"
      - "DEV=false"
    #DEV   - "FLASK_ENV=development"
    #DEV   - "HOME=/lm"
    volumes:
    #DEV   - "LOCAL_PATH/lifemonitor:/lm/lifemonitor"
      - "./certs:/certs"
    networks:
      - life_monitor

volumes:
  lifemonitor_db:

networks:
  life_monitor:
  #DEV   name: seek_default
  #DEV   external: true