# vim: set et sw=2

openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Life Monitor API"
  description: "Workflow sustainability service"

servers:
  - url: /
    description: Version 0.0 of API.  Add version prefix (e.g, /v1.0) once we have something useful

paths:
  /workflows:
    get:
      operationId: "api.workflows_get"
      summary: "Get all known workflows"
      responses:
        '200':
          description: A JSON array of Workflow objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'

    post:
      operationId: "api.workflows_post"
      summary: "Register a workflow"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '201':
          description: Workflow created

  /workflows/{wf_uuid}/{wf_version}:
    get:
      operationId: "api.workflows_get_by_id"
      summary: "Get information about a single workflow"
      parameters:
        - $ref: '#/components/parameters/wf_uuid'
        - $ref: '#/components/parameters/wf_version'
        - $ref: '#/components/parameters/test_suite'
        - $ref: '#/components/parameters/test_build'
        - $ref: '#/components/parameters/test_output'
      responses:
        '200':
          description: A Workflow object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '400':
          description: Invalid input
        '404':
          description: Not found

    put:
      operationId: "api.workflows_put"
      summary: "Modify an existing workflow"
      parameters:
        - $ref: '#/components/parameters/wf_uuid'
        - $ref: '#/components/parameters/wf_version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: Workflow updated

    delete:
      operationId: "api.workflows_delete"
      summary: "Delete a workflow"
      parameters:
        - $ref: '#/components/parameters/wf_uuid'
        - $ref: '#/components/parameters/wf_version'
      responses:
        '200':
          description: Does not exist
        '204':
          description: Deleted
        '400':
          description: Invalid input

  /workflows/{wf_uuid}/{wf_version}/suites:
    post:
      operationId: "api.suites_post"
      summary: "Register a test suite"
      parameters:
        - $ref: '#/components/parameters/wf_uuid'
        - $ref: '#/components/parameters/wf_version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuite'
      responses:
        '201':
          description: TestSuite created

  /suites/{suite_uuid}:
    delete:
      operationId: "api.suites_delete"
      summary: "Delete a test suite"
      parameters:
        - $ref: '#/components/parameters/suite_uuid'
      responses:
        '200':
          description: Does not exist
        '204':
          description: Deleted
        '400':
          description: Invalid input

components:
  parameters:
    wf_uuid:
      name: "wf_uuid"
      description: "Workflow's Unique identifier"
      in: path
      schema:
        type: string
      required: true
    wf_version:
      name: "wf_version"
      description: "Workflow's version"
      in: path
      schema:
        type: string
      required: true
    test_suite:
      name: "test_suite"
      description: "Flag to retrieve test suites info of the workflow"
      in: query
      schema:
        type: boolean
      required: false
    test_build:
      name: "test_build"
      description: "Flag to retrieve test build info of test suites"
      in: query
      schema:
        type: boolean
      required: false
    test_output:
      name: "test_output"
      description: "Flag to retrieve output of workflow tests"
      in: query
      schema:
        type: boolean
      required: false
    suite_uuid:
      name: "suite_uuid"
      description: "TestSuite's Unique identifier"
      in: path
      schema:
        type: string
      required: true

  schemas:
    Workflow:
      type: object
      properties:
        uuid:
          type: string
        version:
          type: string
        roc_link:
          type: string
        name:
          type: string
      required:
        - uuid
        - version
        - roc_link

    TestSuite:
      type: object
      properties:
        test_suite_metadata:
          type: object
      required:
        - test_suite_metadata
